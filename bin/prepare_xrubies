#!/usr/bin/env bash

set -e
source "$HOME/.rvm/scripts/rvm"

# Avoid running all the tasks over and over
mkdir -p "$HOME/.rake-compiler"
if [ -f "$HOME/.rake-compiler/.prepared" ]; then
  exit 0
fi

# shared directory between VM and host
cd '/vagrant'

# Install rake-compiler in all Rubies
rvm all do gem install rake-compiler -v "~> 0.9.5"

# Use just one CPU for building 1.8.7 and 1.9.3
export MAKE="make"

# Build 1.8.7 with mingw32 compiler (GCC 4.2)
rvm use 1.8.7-p374
rake-compiler cross-ruby VERSION=1.8.7-p374 HOST=i586-mingw32msvc

# Build 1.9.3 using 1.9.3 as base
rvm use 1.9.3
rake-compiler cross-ruby VERSION=1.9.3-p550 HOST=i586-mingw32msvc

# Use all CPUs for building 2.0+
export MAKE="make -j$(nproc)"

# Build Ruby 2.0.0
rake-compiler cross-ruby VERSION=2.0.0-p594 HOST=i686-w64-mingw32 debugflags="-g"

# Build x64 Ruby 2.0.0
rake-compiler cross-ruby VERSION=2.0.0-p594 HOST=x86_64-w64-mingw32 debugflags="-g"

# Build Ruby 2.1
rake-compiler cross-ruby VERSION=2.1.4 HOST=i686-w64-mingw32 debugflags="-g"

# Build x64 Ruby 2.1
rake-compiler cross-ruby VERSION=2.1.4 HOST=x86_64-w64-mingw32 debugflags="-g"

# Mark installation prepared and don't run all this again
touch "$HOME/.rake-compiler/.prepared"
